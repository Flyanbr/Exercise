# Exercise movielens 1m
import pandas as pd
import matplotlib.pylab as plt

unames = ['user_id', 'gender', 'age', 'occupation', 'zip']
users = pd.read_table('pydata-book-2nd-edition/datasets/movielens/users.dat', sep='::',header=None,names=unames, engine='python')

rnames = ['user_id', 'movie_id','rating','timestamp']
ratings = pd.read_table('pydata-book-2nd-edition/datasets/movielens/ratings.dat',sep='::',header=None,names=rnames, engine='python')

mnames = ['movie_id','title','genres']
movies = pd.read_table('pydata-book-2nd-edition/datasets/movielens/movies.dat',sep='::',header=None,names=mnames, engine='python')

# print(users[:5])
# print(ratings)

data = pd.merge(pd.merge(ratings,users),movies)
# print(data)
mean_ratings = data.pivot_table('rating',index='title',columns='gender',aggfunc='mean') #计算每部电影的平均得分
# print(mean_ratings[:5])

rating_by_title = data.groupby('title').size()
active_titles = rating_by_title.index[rating_by_title >= 250]
# print(rating_by_title[:10])
# print(active_titles)

mean_ratings = mean_ratings.ix[active_titles]
# print(mean_ratings)
top_female_ratings = mean_ratings.sort_values(by='F',ascending=False) #之前是sort_index改为values
# print(top_female_ratings[:10])

# 计算平均分歧
mean_ratings['diff'] = mean_ratings['M'] - mean_ratings['F']
sorted_by_diff = mean_ratings.sort_values(by='diff')
# print(sorted_by_diff[:10]) #女性最喜欢的电影
# #对结果反序并取出前15行，得到男性更喜欢的电影
# print(sorted_by_diff[::-1][:15])

# 根据电影名称分组的得分数据的标准差
rating_std_by_title = data.groupby('title')['rating'].std()
# 根据active_title进行过滤
rating_std_by_title = rating_std_by_title.ix[active_titles]
# 根据值对Series进行降序排列
print(rating_std_by_title.sort_values(ascending=False)[:10])
